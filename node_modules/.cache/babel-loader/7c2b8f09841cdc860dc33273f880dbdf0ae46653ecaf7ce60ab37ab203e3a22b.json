{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erkan\\\\Documents\\\\Courses\\\\React Course\\\\Exercises\\\\country-quiz\\\\country-quiz\\\\src\\\\components\\\\Options.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Options({\n  question,\n  dispatch,\n  answer,\n  index,\n  maxPoints\n}) {\n  const answers = [...question.incorrectAnswers, question.correctAnswer].sort();\n  if (index < maxPoints - 1) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options\",\n    children: [answers.map((option, index) => {\n      const isCorrectOption = option === question.correctAnswer;\n      const isSelected = option === answer;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn-option ${isSelected ? \"active\" : \"\"}`,\n        onClick: () => dispatch({\n          type: \"newAnswer\",\n          payload: option\n        }),\n        disabled: answer,\n        children: [answer && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [isCorrectOption && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/Check_round_fill.svg\",\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), isSelected && !isCorrectOption && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/Close_round_fill.svg\",\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), option]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n  if (index === maxPoints - 1) return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => dispatch({\n      type: \"finish\"\n    }),\n    children: \"Finish\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}\n_c = Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["Options","question","dispatch","answer","index","maxPoints","answers","incorrectAnswers","correctAnswer","sort","_jsxDEV","className","children","map","option","isCorrectOption","isSelected","onClick","type","payload","disabled","_Fragment","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/erkan/Documents/Courses/React Course/Exercises/country-quiz/country-quiz/src/components/Options.jsx"],"sourcesContent":["export default function Options({\r\n  question,\r\n  dispatch,\r\n  answer,\r\n  index,\r\n  maxPoints,\r\n}) {\r\n  const answers = [...question.incorrectAnswers, question.correctAnswer].sort();\r\n  if (index < maxPoints - 1)\r\n    return (\r\n      <div className=\"options\">\r\n        {answers.map((option, index) => {\r\n          const isCorrectOption = option === question.correctAnswer;\r\n          const isSelected = option === answer;\r\n          return (\r\n            <button\r\n              className={`btn-option ${isSelected ? \"active\" : \"\"}`}\r\n              key={index}\r\n              onClick={() => dispatch({ type: \"newAnswer\", payload: option })}\r\n              disabled={answer}\r\n            >\r\n              {answer && (\r\n                <>\r\n                  {isCorrectOption && (\r\n                    <img src=\"./images/Check_round_fill.svg\" alt=\"icon\" />\r\n                  )}\r\n                  {isSelected && !isCorrectOption && (\r\n                    <img src=\"./images/Close_round_fill.svg\" alt=\"icon\" />\r\n                  )}\r\n                </>\r\n              )}\r\n              {option}\r\n            </button>\r\n          );\r\n        })}\r\n        ;\r\n      </div>\r\n    );\r\n  if (index === maxPoints - 1)\r\n    return <button onClick={() => dispatch({ type: \"finish\" })}>Finish</button>;\r\n}\r\n"],"mappings":";;AAAA,eAAe,SAASA,OAAOA,CAAC;EAC9BC,QAAQ;EACRC,QAAQ;EACRC,MAAM;EACNC,KAAK;EACLC;AACF,CAAC,EAAE;EACD,MAAMC,OAAO,GAAG,CAAC,GAAGL,QAAQ,CAACM,gBAAgB,EAAEN,QAAQ,CAACO,aAAa,CAAC,CAACC,IAAI,CAAC,CAAC;EAC7E,IAAIL,KAAK,GAAGC,SAAS,GAAG,CAAC,EACvB,oBACEK,OAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,QAAA,GACrBN,OAAO,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEV,KAAK,KAAK;MAC9B,MAAMW,eAAe,GAAGD,MAAM,KAAKb,QAAQ,CAACO,aAAa;MACzD,MAAMQ,UAAU,GAAGF,MAAM,KAAKX,MAAM;MACpC,oBACEO,OAAA;QACEC,SAAS,EAAE,cAAcK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QAEtDC,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC;UAAEgB,IAAI,EAAE,WAAW;UAAEC,OAAO,EAAEL;QAAO,CAAC,CAAE;QAChEM,QAAQ,EAAEjB,MAAO;QAAAS,QAAA,GAEhBT,MAAM,iBACLO,OAAA,CAAAW,SAAA;UAAAT,QAAA,GACGG,eAAe,iBACdL,OAAA;YAAKY,GAAG,EAAC,+BAA+B;YAACC,GAAG,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACtD,EACAX,UAAU,IAAI,CAACD,eAAe,iBAC7BL,OAAA;YAAKY,GAAG,EAAC,+BAA+B;YAACC,GAAG,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACtD;QAAA,eACD,CACH,EACAb,MAAM;MAAA,GAdFV,KAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeJ,CAAC;IAEb,CAAC,CAAC,EAAC,GAEL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEV,IAAIvB,KAAK,KAAKC,SAAS,GAAG,CAAC,EACzB,oBAAOK,OAAA;IAAQO,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC;MAAEgB,IAAI,EAAE;IAAS,CAAC,CAAE;IAAAN,QAAA,EAAC;EAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC/E;AAACC,EAAA,GAxCuB5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}