{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erkan\\\\Documents\\\\Courses\\\\React Course\\\\Exercises\\\\country-quiz\\\\country-quiz\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport Question from \"./Question\";\nimport Progress from \"./Progress\";\nimport Finished from \"./Finished\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0\n};\nfunction reducer(state, action) {\n  console.log(state);\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"active\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      console.log(question);\n      return {\n        ...state,\n        answer: action.payload,\n        points: action.payload === question.correctAnswer ? state.points + 1 : state.points\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      };\n    case \"finish\":\n      return {\n        ...state,\n        status: \"finished\"\n      };\n    case \"reset\":\n      return {\n        ...state,\n        status: \"active\",\n        index: 0,\n        answer: null,\n        points: 0\n      };\n    default:\n      throw new Error(\"Action unknown\");\n  }\n}\nfunction App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index,\n    answer,\n    points\n  }, dispatch] = useReducer(reducer, initialState);\n  const maxPoints = questions.length;\n  useEffect(function () {\n    fetch(\"https://the-trivia-api.com/v2/questions/\").then(res => res.json()).then(data => dispatch({\n      type: \"dataReceived\",\n      payload: data\n    })).catch(err => dispatch({\n      type: \"dataFailed\"\n    }));\n  }, []);\n  useEffect(function () {\n    if (answer === null) return;\n    const timer = setTimeout(() => {\n      dispatch({\n        type: \"nextQuestion\"\n      });\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [answer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [status !== \"finished\" && /*#__PURE__*/_jsxDEV(Header, {\n      points: points,\n      maxPoints: maxPoints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 34\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 32\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[index],\n          dispatch: dispatch,\n          answer: answer,\n          index: index,\n          maxPoints: maxPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), status === \"finished\" && /*#__PURE__*/_jsxDEV(Finished, {\n        maxPoints: maxPoints,\n        points: points,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3yUlcs64W7Ov/upXdDNn52h62oM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Main","Loader","Error","Question","Progress","Finished","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","questions","status","index","answer","points","reducer","state","action","console","log","type","payload","question","at","correctAnswer","App","_s","dispatch","maxPoints","length","fetch","then","res","json","data","catch","err","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/erkan/Documents/Courses/React Course/Exercises/country-quiz/country-quiz/src/components/App.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport Question from \"./Question\";\nimport Progress from \"./Progress\";\nimport Finished from \"./Finished\";\n\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0,\n};\n\nfunction reducer(state, action) {\n  console.log(state);\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"active\",\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\",\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      console.log(question);\n      return {\n        ...state,\n        answer: action.payload,\n        points:\n          action.payload === question.correctAnswer\n            ? state.points + 1\n            : state.points,\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null,\n      };\n    case \"finish\":\n      return {\n        ...state,\n        status: \"finished\",\n      };\n    case \"reset\":\n      return {\n        ...state,\n        status: \"active\",\n        index: 0,\n        answer: null,\n        points: 0,\n      };\n    default:\n      throw new Error(\"Action unknown\");\n  }\n}\n\nfunction App() {\n  const [{ questions, status, index, answer, points }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  const maxPoints = questions.length;\n\n  useEffect(function () {\n    fetch(\"https://the-trivia-api.com/v2/questions/\")\n      .then((res) => res.json())\n      .then((data) => dispatch({ type: \"dataReceived\", payload: data }))\n      .catch((err) => dispatch({ type: \"dataFailed\" }));\n  }, []);\n\n  useEffect(\n    function () {\n      if (answer === null) return;\n      const timer = setTimeout(() => {\n        dispatch({ type: \"nextQuestion\" });\n      }, 1000);\n      return () => clearTimeout(timer);\n    },\n    [answer]\n  );\n\n  return (\n    <div className=\"app\">\n      {status !== \"finished\" && (\n        <Header points={points} maxPoints={maxPoints} />\n      )}\n      <Main>\n        {status === \"loading\" && <Loader />}\n        {status === \"error\" && <Error />}\n        {status === \"active\" && (\n          <>\n            <Progress index={index} />\n            <Question\n              question={questions[index]}\n              dispatch={dispatch}\n              answer={answer}\n              index={index}\n              maxPoints={maxPoints}\n            />\n          </>\n        )}\n        {status === \"finished\" && (\n          <Finished maxPoints={maxPoints} points={points} dispatch={dispatch} />\n        )}\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}