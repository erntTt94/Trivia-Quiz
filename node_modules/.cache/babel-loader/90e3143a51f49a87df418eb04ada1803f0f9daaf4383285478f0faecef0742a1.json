{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erkan\\\\Documents\\\\Courses\\\\React Course\\\\Exercises\\\\country-quiz\\\\country-quiz\\\\src\\\\components\\\\Options.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Options({\n  question,\n  dispatch,\n  answer,\n  index,\n  maxPoints\n}) {\n  const answers = [...question.incorrectAnswers, question.correctAnswer].sort();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options\",\n    children: [answers.map((option, ind) => {\n      const isCorrectOption = option === question.correctAnswer;\n      const isSelected = option === answer;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn-option ${isSelected ? \"active\" : \"\"}`,\n        onClick: () => {\n          index < maxPoints - 1 ? dispatch({\n            type: \"newAnswer\",\n            payload: option\n          }) : dispatch({\n            type: \"finish\"\n          });\n        },\n        disabled: answer,\n        children: [answer && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [isCorrectOption && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/Check_round_fill.svg\",\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this), isSelected && !isCorrectOption && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/Close_round_fill.svg\",\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), option]\n      }, ind, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["Options","question","dispatch","answer","index","maxPoints","answers","incorrectAnswers","correctAnswer","sort","_jsxDEV","className","children","map","option","ind","isCorrectOption","isSelected","onClick","type","payload","disabled","_Fragment","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/erkan/Documents/Courses/React Course/Exercises/country-quiz/country-quiz/src/components/Options.jsx"],"sourcesContent":["export default function Options({\r\n  question,\r\n  dispatch,\r\n  answer,\r\n  index,\r\n  maxPoints,\r\n}) {\r\n  const answers = [...question.incorrectAnswers, question.correctAnswer].sort();\r\n  return (\r\n    <div className=\"options\">\r\n      {answers.map((option, ind) => {\r\n        const isCorrectOption = option === question.correctAnswer;\r\n        const isSelected = option === answer;\r\n        return (\r\n          <button\r\n            className={`btn-option ${isSelected ? \"active\" : \"\"}`}\r\n            key={ind}\r\n            onClick={() => {\r\n              index < maxPoints - 1\r\n                ? dispatch({ type: \"newAnswer\", payload: option })\r\n                : dispatch({ type: \"finish\" });\r\n            }}\r\n            disabled={answer}\r\n          >\r\n            {answer && (\r\n              <>\r\n                {isCorrectOption && (\r\n                  <img src=\"./images/Check_round_fill.svg\" alt=\"icon\" />\r\n                )}\r\n                {isSelected && !isCorrectOption && (\r\n                  <img src=\"./images/Close_round_fill.svg\" alt=\"icon\" />\r\n                )}\r\n              </>\r\n            )}\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n      ;\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,eAAe,SAASA,OAAOA,CAAC;EAC9BC,QAAQ;EACRC,QAAQ;EACRC,MAAM;EACNC,KAAK;EACLC;AACF,CAAC,EAAE;EACD,MAAMC,OAAO,GAAG,CAAC,GAAGL,QAAQ,CAACM,gBAAgB,EAAEN,QAAQ,CAACO,aAAa,CAAC,CAACC,IAAI,CAAC,CAAC;EAC7E,oBACEC,OAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,QAAA,GACrBN,OAAO,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;MAC5B,MAAMC,eAAe,GAAGF,MAAM,KAAKb,QAAQ,CAACO,aAAa;MACzD,MAAMS,UAAU,GAAGH,MAAM,KAAKX,MAAM;MACpC,oBACEO,OAAA;QACEC,SAAS,EAAE,cAAcM,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QAEtDC,OAAO,EAAEA,CAAA,KAAM;UACbd,KAAK,GAAGC,SAAS,GAAG,CAAC,GACjBH,QAAQ,CAAC;YAAEiB,IAAI,EAAE,WAAW;YAAEC,OAAO,EAAEN;UAAO,CAAC,CAAC,GAChDZ,QAAQ,CAAC;YAAEiB,IAAI,EAAE;UAAS,CAAC,CAAC;QAClC,CAAE;QACFE,QAAQ,EAAElB,MAAO;QAAAS,QAAA,GAEhBT,MAAM,iBACLO,OAAA,CAAAY,SAAA;UAAAV,QAAA,GACGI,eAAe,iBACdN,OAAA;YAAKa,GAAG,EAAC,+BAA+B;YAACC,GAAG,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACtD,EACAX,UAAU,IAAI,CAACD,eAAe,iBAC7BN,OAAA;YAAKa,GAAG,EAAC,+BAA+B;YAACC,GAAG,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACtD;QAAA,eACD,CACH,EACAd,MAAM;MAAA,GAlBFC,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBF,CAAC;IAEb,CAAC,CAAC,EAAC,GAEL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACC,EAAA,GAzCuB7B,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}