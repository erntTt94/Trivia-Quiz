{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erkan\\\\Documents\\\\Courses\\\\React Course\\\\Exercises\\\\country-quiz\\\\country-quiz\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport Question from \"./Question\";\nimport Progress from \"./Progress\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0,\n  next: false\n};\nfunction reducer(state, action) {\n  console.log(state);\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"active\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      console.log(question);\n      return {\n        ...state,\n        answer: action.payload,\n        points: action.payload === question.correctAnswer ? state.points + 1 : state.points\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      };\n    default:\n      throw new Error(\"Action unknown\");\n  }\n}\nfunction App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index,\n    answer,\n    points\n  }, dispatch] = useReducer(reducer, initialState);\n  const maxPoints = questions.length;\n  useEffect(function () {\n    fetch(\"https://the-trivia-api.com/v2/questions/\").then(res => res.json()).then(data => dispatch({\n      type: \"dataReceived\",\n      payload: data\n    })).catch(err => dispatch({\n      type: \"dataFailed\"\n    }));\n  }, []);\n  useEffect(function () {\n    if (answer === null) return;\n    const id = setInterval(function () {\n      dispatch({\n        type: \"nextQuestion\"\n      });\n    }, 1000);\n    return clearInterval(id);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      points: points,\n      maxPoints: maxPoints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 34\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 32\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[index],\n          dispatch: dispatch,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3yUlcs64W7Ov/upXdDNn52h62oM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Main","Loader","Error","Question","Progress","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","questions","status","index","answer","points","next","reducer","state","action","console","log","type","payload","question","at","correctAnswer","App","_s","dispatch","maxPoints","length","fetch","then","res","json","data","catch","err","id","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/erkan/Documents/Courses/React Course/Exercises/country-quiz/country-quiz/src/components/App.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport Question from \"./Question\";\nimport Progress from \"./Progress\";\n\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0,\n  next: false,\n};\n\nfunction reducer(state, action) {\n  console.log(state);\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"active\",\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\",\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      console.log(question);\n      return {\n        ...state,\n        answer: action.payload,\n        points:\n          action.payload === question.correctAnswer\n            ? state.points + 1\n            : state.points,\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null,\n      };\n    default:\n      throw new Error(\"Action unknown\");\n  }\n}\n\nfunction App() {\n  const [{ questions, status, index, answer, points }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  const maxPoints = questions.length;\n\n  useEffect(function () {\n    fetch(\"https://the-trivia-api.com/v2/questions/\")\n      .then((res) => res.json())\n      .then((data) => dispatch({ type: \"dataReceived\", payload: data }))\n      .catch((err) => dispatch({ type: \"dataFailed\" }));\n  }, []);\n\n  useEffect(\n    function () {\n      if (answer === null) return;\n      const id = setInterval(function () {\n        dispatch({ type: \"nextQuestion\" });\n      }, 1000);\n      return clearInterval(id);\n    },\n    [dispatch]\n  );\n\n  return (\n    <div className=\"app\">\n      <Header points={points} maxPoints={maxPoints} />\n      <Main>\n        {status === \"loading\" && <Loader />}\n        {status === \"error\" && <Error />}\n        {status === \"active\" && (\n          <>\n            <Progress />\n            <Question\n              question={questions[index]}\n              dispatch={dispatch}\n              answer={answer}\n            />\n          </>\n        )}\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}